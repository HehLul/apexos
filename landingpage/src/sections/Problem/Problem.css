.problem {
  padding: 6rem;
  padding-top: 5rem;
  border-radius: 20px;
  background-color: white;
  color: black;
  text-align: center;
  font-size: 1.1rem;
}

/* Initial hidden state - header elements start invisible */
.problem .section-title,
.problem .header h1,
.problem .header p {
  opacity: 0;
  transform: translateY(40px);
}

/* SectionTitle - animate entire component at once */
.problem .section-title * {
  opacity: 1 !important;
  transform: none !important;
}

/* Animation triggers when .animate-in class is added to problem section */
.problem.animate-in .section-title {
  animation: fadeInFromTopProblem 0.8s ease-out forwards;
  animation-delay: 0s;
}

.problem.animate-in .header h1 {
  font-size: 3rem;
  font-weight: 600;
  margin-bottom: 1rem;
  animation: fadeInFromBottomProblem 0.8s ease-out forwards;
  animation-delay: 0.3s;
}

.problem.animate-in .header p {
  font-size: 1.2rem;
  color: rgb(80, 80, 80);
  margin-bottom: 4rem;
  animation: fadeInFromBottomProblem 0.8s ease-out forwards;
  animation-delay: 0.6s;
}

.problem-cards {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 2rem;
  margin-bottom: 4rem;
}

.problem-card {
  /* background-color: #f8f9fa; */
  border: 1px solid rgb(80, 80, 80);
  border-radius: 16px;
  padding: 2rem;
  text-align: left;
  transition: transform 0.3s ease, box-shadow 0.3s ease;

  /* Initial hidden state for cards */
  opacity: 0;
  transform: translateY(40px);
}

/* Card animations - staggered for 4 cards */
.problem.animate-in .problem-card:nth-child(1) {
  animation: fadeInFromBottomProblem 0.8s ease-out forwards;
  animation-delay: 0.9s;
}

.problem.animate-in .problem-card:nth-child(2) {
  animation: fadeInFromBottomProblem 0.8s ease-out forwards;
  animation-delay: 1s;
}

.problem.animate-in .problem-card:nth-child(3) {
  animation: fadeInFromBottomProblem 0.8s ease-out forwards;
  animation-delay: 1.1s;
}

.problem.animate-in .problem-card:nth-child(4) {
  animation: fadeInFromBottomProblem 0.8s ease-out forwards;
  animation-delay: 1.2s;
}

.problem-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
}

.problem-card .icon {
  font-size: 2rem;
  width: 48px;
  /* margin-bottom: 1.5rem; */
}

.problem-card p {
  font-size: 1.1rem;
  line-height: 1.6;
  color: #000000;
  margin-bottom: 1.5rem;
}

.attribution {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.attribution .problem-type {
  font-weight: 600;
  color: #000;
  font-size: 0.9rem;
}

.attribution .persona {
  color: #666;
  font-size: 1rem;
}

.attribution .problem-type::after {
  content: " â€¢";
  color: #ccc;
  margin-left: 0.5rem;
}

.closing-hook {
  /* background-color: #f1f3f4; */
  border-radius: 12px;
  padding: 2rem;
  margin-top: 2rem;

  /* Initial hidden state */
  opacity: 0;
  transform: translateY(40px);
}

.problem.animate-in .closing-hook {
  animation: fadeInFromBottomProblem 0.8s ease-out forwards;
  animation-delay: 1.4s;
}

.closing-hook p {
  font-size: 1.2rem;
  font-weight: 500;
  color: #333;
  margin: 0;
  line-height: 1.5;
}

/* Responsive Design */
@media (max-width: 1024px) {
  .problem {
    padding: 4rem 3rem;
  }

  .problem-cards {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }
}

@media (max-width: 768px) {
  .problem {
    padding: 3rem 2rem;
  }

  .problem .header h1 {
    font-size: 2.5rem;
  }

  .problem-cards {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }
}

@media (max-width: 480px) {
  .problem {
    padding: 2rem 1rem;
  }

  .problem .header h1 {
    font-size: 2rem;
  }

  .problem-card {
    padding: 1.5rem;
  }
}

/* Keyframe Animations - specific to Problem section */
@keyframes fadeInFromTopProblem {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInFromBottomProblem {
  from {
    opacity: 0;
    transform: translateY(40px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
