.pricing {
  padding: 6rem;
  padding-top: 5rem;
  border-radius: 20px;
  background-color: black;
  color: white;
  font-size: 1.1rem;
  background: radial-gradient(
    ellipse at center bottom,
    rgba(70, 70, 70, 1) 0%,
    /* Lighter gray center */ rgba(30, 30, 30, 1) 30%,
    /* Medium gray */ rgba(20, 20, 20, 1) 50%,
    /* Darker gray */ rgba(0, 0, 0, 1) 100% /* Pure black at edges */
  );
}

.pricing h1 {
  font-size: 3rem;
  font-weight: 600;
}

.pricing > .header {
  margin-top: 4rem;
  text-align: center;
  margin-bottom: 5rem;
}

.pricings {
  display: flex;
  color: rgb(124, 124, 124);
  gap: 2rem;
}
.pricings > .container {
  display: flex;
  flex-direction: column;
  background-color: rgba(122, 122, 122, 0.342);
  color: rgb(143, 143, 143);
  border-radius: 20px;
  padding: 2rem;
  width: 500px;
  min-height: 400px;
}

.pricings > .container:nth-child(2) {
  background-color: white;
}
.pricings > .container h4 {
  margin: 0;
  font-weight: 500;
}

.pricings > .container span {
  font-size: 3rem;
  font-weight: 600;
  color: white;
}
.pricings > .container:nth-child(2) span {
  color: black;
}
.pricings > .container p {
  padding-bottom: 20px;
  border-bottom: dashed 1px rgba(170, 169, 169, 0.5);
}

.pricings > .container ul {
  text-align: left;
  list-style: none;
  padding-left: 0;
}
.pricings > .container:nth-child(2) .plan-title {
  color: black;
}
.pricings > .container ul .plan-title {
  font-weight: 600;
  color: white;
  margin-bottom: 12px;
}
.pricings > .container li {
  display: flex;
  align-items: center;
  gap: 8px;
  line-height: 2rem;
}

.pricings > .container button {
  width: 100%;
  font-weight: 500;
  font-size: 1.1rem;
  padding: 20px;
  border-radius: 20px;
  margin-top: auto;
  background-color: rgba(78, 78, 78, 0.507);
  animation-delay: 1s;
}
.pricings > .container:nth-child(2) button {
  background-color: black;
}
.pricings > .container button:hover {
  transition: transform 0.3s ease;
  transform: scale(1.02);
}

/* Add these rules to your existing Pricing.css for scale animation */

.pricings > .container {
  transition: transform 0.3s ease, opacity 0.3s ease;
  transform: scale(1);
  opacity: 1;
  cursor: pointer;
}

/* When any container is selected, make all others smaller */
.pricings.has-selected > .container {
  transform: scale(0.95);
  opacity: 0.7;
}

/* The selected container stays larger and full opacity */
.pricings.has-selected > .container.selected {
  transform: scale(1.05);
  opacity: 1;
}

/* Optional: Add hover effect for better UX */
.pricings > .container:hover {
  transform: scale(1.02);
}
